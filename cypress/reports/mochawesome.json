{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 33,
    "pending": 0,
    "failures": 8,
    "start": "2021-03-10T21:30:39.490Z",
    "end": "2021-03-10T21:31:42.137Z",
    "duration": 62647,
    "testsRegistered": 41,
    "passPercent": 80.48780487804879,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "49b5366c-2608-445a-b429-58a2f56eaa9d",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ee63c9f4-226d-4d13-9cbd-0571acde6171",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 485,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "6abdb9c0-386f-47dc-9056-4e6a06713315",
              "parentUUID": "ee63c9f4-226d-4d13-9cbd-0571acde6171",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6abdb9c0-386f-47dc-9056-4e6a06713315"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 485,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "93953925-3a07-404e-b7c9-ba45b08a9b0a",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "timedOut": null,
              "duration": 117,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');",
              "err": {},
              "uuid": "8091af21-9cc8-4f61-b617-2574434442ef",
              "parentUUID": "93953925-3a07-404e-b7c9-ba45b08a9b0a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 150,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "551e5e8f-797d-4a0d-811b-8effc09b5c3f",
              "parentUUID": "93953925-3a07-404e-b7c9-ba45b08a9b0a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 169,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "74dca4c4-5c36-4c78-981f-90faf39bab1e",
              "parentUUID": "93953925-3a07-404e-b7c9-ba45b08a9b0a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 88,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "3a545595-d7c5-49a2-a9f3-f25a07ec1ee0",
              "parentUUID": "93953925-3a07-404e-b7c9-ba45b08a9b0a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 89,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "d98e7406-1efd-47e9-b1bb-8694984bdd90",
              "parentUUID": "93953925-3a07-404e-b7c9-ba45b08a9b0a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 112,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "65c06c54-7d47-442c-a8e5-d3dfa6b60272",
              "parentUUID": "93953925-3a07-404e-b7c9-ba45b08a9b0a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 85,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "913a264e-e43f-4135-ae0e-6632559315bc",
              "parentUUID": "93953925-3a07-404e-b7c9-ba45b08a9b0a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8091af21-9cc8-4f61-b617-2574434442ef",
            "551e5e8f-797d-4a0d-811b-8effc09b5c3f",
            "74dca4c4-5c36-4c78-981f-90faf39bab1e",
            "3a545595-d7c5-49a2-a9f3-f25a07ec1ee0",
            "d98e7406-1efd-47e9-b1bb-8694984bdd90",
            "65c06c54-7d47-442c-a8e5-d3dfa6b60272",
            "913a264e-e43f-4135-ae0e-6632559315bc"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 810,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "6e892de7-ced9-46aa-b8ac-309d344cac45",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 131,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "40215cc0-612a-4aec-bafb-c045576533ea",
              "parentUUID": "6e892de7-ced9-46aa-b8ac-309d344cac45",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 189,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "c0540d01-06f9-432f-ac07-10fad1c2faf8",
              "parentUUID": "6e892de7-ced9-46aa-b8ac-309d344cac45",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "40215cc0-612a-4aec-bafb-c045576533ea",
            "c0540d01-06f9-432f-ac07-10fad1c2faf8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 320,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d9e1c733-b9ef-48e4-bd26-0275553d5d6d",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 81,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "237d591b-93c0-466c-bf30-3b6cd9bce813",
              "parentUUID": "d9e1c733-b9ef-48e4-bd26-0275553d5d6d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 144,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "460add26-9194-470e-95f8-77836344c95f",
              "parentUUID": "d9e1c733-b9ef-48e4-bd26-0275553d5d6d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 141,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "139f2627-627d-42e8-8c01-e5fdb5ab5db7",
              "parentUUID": "d9e1c733-b9ef-48e4-bd26-0275553d5d6d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 85,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "d1e9f26e-586f-40ba-be0e-61e365390b42",
              "parentUUID": "d9e1c733-b9ef-48e4-bd26-0275553d5d6d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "237d591b-93c0-466c-bf30-3b6cd9bce813",
            "460add26-9194-470e-95f8-77836344c95f",
            "139f2627-627d-42e8-8c01-e5fdb5ab5db7",
            "d1e9f26e-586f-40ba-be0e-61e365390b42"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 451,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "385727b5-bdf5-4772-8b09-884ab9d5797f",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 245,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "ca9b1af1-0633-4936-889b-5a50240c1493",
              "parentUUID": "385727b5-bdf5-4772-8b09-884ab9d5797f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 239,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "53dea674-5942-4b0d-8a4a-65edda28c7f2",
              "parentUUID": "385727b5-bdf5-4772-8b09-884ab9d5797f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ca9b1af1-0633-4936-889b-5a50240c1493",
            "53dea674-5942-4b0d-8a4a-65edda28c7f2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 484,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b3342a75-71ae-4051-aa9e-aeab83ab67de",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 95,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "130cc0ca-6bf5-40fa-b40e-3fa847f066b9",
              "parentUUID": "b3342a75-71ae-4051-aa9e-aeab83ab67de",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 89,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "99dc1002-3edd-4345-8fc8-0aaee4435dcd",
              "parentUUID": "b3342a75-71ae-4051-aa9e-aeab83ab67de",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "130cc0ca-6bf5-40fa-b40e-3fa847f066b9",
            "99dc1002-3edd-4345-8fc8-0aaee4435dcd"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 184,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a52d8151-0507-4626-a438-c588c078d867",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 520,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "31e327a0-6038-417b-b0bf-9df593193340",
              "parentUUID": "a52d8151-0507-4626-a438-c588c078d867",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 9154,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "fcdadb5f-9280-4b54-9a91-1ea49625a108",
              "parentUUID": "a52d8151-0507-4626-a438-c588c078d867",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "31e327a0-6038-417b-b0bf-9df593193340",
            "fcdadb5f-9280-4b54-9a91-1ea49625a108"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9674,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "eacb0fb8-7e47-49aa-8d22-d57e282f4907",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2284,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "79bae7ae-4e7b-4e44-8359-62dfa248899d",
              "parentUUID": "eacb0fb8-7e47-49aa-8d22-d57e282f4907",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 8993,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "5cfcaedc-e22a-447a-a173-bfd44a6e6c64",
              "parentUUID": "eacb0fb8-7e47-49aa-8d22-d57e282f4907",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 1424,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "f4cc84b4-dd81-4a8c-b13f-5b4a7a601673",
              "parentUUID": "eacb0fb8-7e47-49aa-8d22-d57e282f4907",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "79bae7ae-4e7b-4e44-8359-62dfa248899d",
            "5cfcaedc-e22a-447a-a173-bfd44a6e6c64",
            "f4cc84b4-dd81-4a8c-b13f-5b4a7a601673"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12701,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "ce6040f1-7243-4e9d-86e1-89cc8644be4f",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 119,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "b40eaf12-3915-4e81-8e52-51cc62cc5d77",
              "parentUUID": "ce6040f1-7243-4e9d-86e1-89cc8644be4f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 87,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "d993c023-9ce8-4186-8140-6dbb53591a18",
              "parentUUID": "ce6040f1-7243-4e9d-86e1-89cc8644be4f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 70,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "dc723655-c573-4e0b-8cea-3af8a12fc16c",
              "parentUUID": "ce6040f1-7243-4e9d-86e1-89cc8644be4f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 2427,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "9deb92ba-f3fa-45bb-b4bb-4a635b20c5ae",
              "parentUUID": "ce6040f1-7243-4e9d-86e1-89cc8644be4f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b40eaf12-3915-4e81-8e52-51cc62cc5d77",
            "d993c023-9ce8-4186-8140-6dbb53591a18",
            "dc723655-c573-4e0b-8cea-3af8a12fc16c",
            "9deb92ba-f3fa-45bb-b4bb-4a635b20c5ae"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2703,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "cbda521d-83ad-42ee-b0c3-382b178e1dc7",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 119,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {},
              "uuid": "20756e2e-d4fe-4a0f-ba5d-bbcb1a818cab",
              "parentUUID": "cbda521d-83ad-42ee-b0c3-382b178e1dc7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 71,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {},
              "uuid": "bd32f453-3a6b-49b4-9dee-5967aeab231f",
              "parentUUID": "cbda521d-83ad-42ee-b0c3-382b178e1dc7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4219,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:38641/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:38641/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:38641/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:38641/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:38641/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:38641/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:38641/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:38641/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:38641/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:38641/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:38641/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:38641/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:38641/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "87cd4151-b99c-4e3b-937e-09d8ea354bb8",
              "parentUUID": "cbda521d-83ad-42ee-b0c3-382b178e1dc7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 137,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {},
              "uuid": "9a07063f-426c-45ba-a19b-09fb6d9a1239",
              "parentUUID": "cbda521d-83ad-42ee-b0c3-382b178e1dc7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 113,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "40865605-306c-4d54-a34e-e10605c46f22",
              "parentUUID": "cbda521d-83ad-42ee-b0c3-382b178e1dc7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 75,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {},
              "uuid": "0054db51-cb5f-4f66-9f8a-d5e35d0931c5",
              "parentUUID": "cbda521d-83ad-42ee-b0c3-382b178e1dc7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 182,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {},
              "uuid": "333496f1-364a-48a9-93a6-561ffe654e46",
              "parentUUID": "cbda521d-83ad-42ee-b0c3-382b178e1dc7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4766,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Too many elements found. Found '125', expected '100'.",
                "estack": "CypressError: Timed out retrying: Too many elements found. Found '125', expected '100'.\n    at cypressErr (http://localhost:38641/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:38641/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:38641/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:38641/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:38641/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:38641/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:38641/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:38641/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:38641/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:38641/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:38641/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:38641/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:38641/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "18174289-a73b-4935-9600-d64eef7700c5",
              "parentUUID": "cbda521d-83ad-42ee-b0c3-382b178e1dc7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4638,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Too many elements found. Found '61', expected '36'.",
                "estack": "CypressError: Timed out retrying: Too many elements found. Found '61', expected '36'.\n    at cypressErr (http://localhost:38641/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:38641/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:38641/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:38641/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:38641/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:38641/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:38641/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:38641/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:38641/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:38641/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:38641/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:38641/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:38641/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "4abca571-e9a2-479b-a250-cb46fabbd1dc",
              "parentUUID": "cbda521d-83ad-42ee-b0c3-382b178e1dc7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "20756e2e-d4fe-4a0f-ba5d-bbcb1a818cab",
            "bd32f453-3a6b-49b4-9dee-5967aeab231f",
            "9a07063f-426c-45ba-a19b-09fb6d9a1239",
            "40865605-306c-4d54-a34e-e10605c46f22",
            "0054db51-cb5f-4f66-9f8a-d5e35d0931c5",
            "333496f1-364a-48a9-93a6-561ffe654e46"
          ],
          "failures": [
            "87cd4151-b99c-4e3b-937e-09d8ea354bb8",
            "18174289-a73b-4935-9600-d64eef7700c5",
            "4abca571-e9a2-479b-a250-cb46fabbd1dc"
          ],
          "pending": [],
          "skipped": [],
          "duration": 14320,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "6566969a-2f6b-4eef-a5c1-23a243830ddb",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 8017,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Too many elements found. Found '2525', expected '2500'.",
                "estack": "CypressError: Timed out retrying: Too many elements found. Found '2525', expected '2500'.\n    at cypressErr (http://localhost:38641/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:38641/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:38641/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:38641/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:38641/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:38641/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:38641/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:38641/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:38641/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:38641/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:38641/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:38641/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:38641/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "cfc9ddcd-4198-4357-a5e6-a0ed236e91b4",
              "parentUUID": "6566969a-2f6b-4eef-a5c1-23a243830ddb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 4671,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Too many elements found. Found '41', expected '25'.",
                "estack": "CypressError: Timed out retrying: Too many elements found. Found '41', expected '25'.\n    at cypressErr (http://localhost:38641/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:38641/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:38641/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:38641/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:38641/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:38641/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:38641/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:38641/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:38641/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:38641/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:38641/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:38641/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:38641/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "1e09bbb0-9908-4aaa-9571-bbca44192c65",
              "parentUUID": "6566969a-2f6b-4eef-a5c1-23a243830ddb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 6319,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Too many elements found. Found '2626', expected '2500'.",
                "estack": "CypressError: Timed out retrying: Too many elements found. Found '2626', expected '2500'.\n    at cypressErr (http://localhost:38641/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:38641/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:38641/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:38641/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:38641/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:38641/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:38641/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:38641/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:38641/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:38641/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:38641/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:38641/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:38641/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "b2bddf7d-d382-4973-bb94-a12404bcfcaa",
              "parentUUID": "6566969a-2f6b-4eef-a5c1-23a243830ddb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "cfc9ddcd-4198-4357-a5e6-a0ed236e91b4",
            "1e09bbb0-9908-4aaa-9571-bbca44192c65",
            "b2bddf7d-d382-4973-bb94-a12404bcfcaa"
          ],
          "pending": [],
          "skipped": [],
          "duration": 19007,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "51430d10-8da7-431c-9636-a7d2c7305869",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 340,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:38641/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:38641/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:38641/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:38641/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:38641/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:38641/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:38641/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:38641/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:38641/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:38641/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:38641/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:38641/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:38641/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:38641/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "a937baad-6e06-4e02-9233-14b870662e41",
              "parentUUID": "51430d10-8da7-431c-9636-a7d2c7305869",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 279,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:38641/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:38641/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:38641/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:38641/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:38641/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:38641/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:38641/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:38641/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:38641/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:38641/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:38641/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:38641/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:38641/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:38641/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "030c438f-26fb-4bbb-bfc0-31547e521841",
              "parentUUID": "51430d10-8da7-431c-9636-a7d2c7305869",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "a937baad-6e06-4e02-9233-14b870662e41",
            "030c438f-26fb-4bbb-bfc0-31547e521841"
          ],
          "pending": [],
          "skipped": [],
          "duration": 619,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}