{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 27,
    "pending": 0,
    "failures": 14,
    "start": "2021-05-19T15:58:19.164Z",
    "end": "2021-05-19T15:59:37.953Z",
    "duration": 78789,
    "testsRegistered": 41,
    "passPercent": 65.85365853658537,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "98caaff0-dd29-4f02-a7f0-ed29873e0651",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d960ad5b-3b41-4619-af64-74b7956f7b12",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 155,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "4dede565-5e29-4077-872a-3b70f3423efc",
              "parentUUID": "d960ad5b-3b41-4619-af64-74b7956f7b12",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4dede565-5e29-4077-872a-3b70f3423efc"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 155,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "6841a13c-8ba0-4d85-bc48-b04db7206d9e",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "timedOut": null,
              "duration": 75,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');",
              "err": {},
              "uuid": "9ba627aa-7c7c-4f0c-97fa-ec14655faaa8",
              "parentUUID": "6841a13c-8ba0-4d85-bc48-b04db7206d9e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 121,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "f1efac7a-9ef2-4579-b8dc-4f86e1383ebb",
              "parentUUID": "6841a13c-8ba0-4d85-bc48-b04db7206d9e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 101,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "fba8670d-497e-43b2-991c-fe15196347bc",
              "parentUUID": "6841a13c-8ba0-4d85-bc48-b04db7206d9e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 107,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "7956b34b-f938-424e-bfc7-51404cb1e04e",
              "parentUUID": "6841a13c-8ba0-4d85-bc48-b04db7206d9e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 105,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "4e676675-f2e8-4eac-bfd5-b0883cbf3f58",
              "parentUUID": "6841a13c-8ba0-4d85-bc48-b04db7206d9e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 100,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "87907500-4c9c-44d4-a90b-065bad016085",
              "parentUUID": "6841a13c-8ba0-4d85-bc48-b04db7206d9e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 118,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "04590899-4fd1-42b0-a6ba-0fa5188e56fc",
              "parentUUID": "6841a13c-8ba0-4d85-bc48-b04db7206d9e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9ba627aa-7c7c-4f0c-97fa-ec14655faaa8",
            "f1efac7a-9ef2-4579-b8dc-4f86e1383ebb",
            "fba8670d-497e-43b2-991c-fe15196347bc",
            "7956b34b-f938-424e-bfc7-51404cb1e04e",
            "4e676675-f2e8-4eac-bfd5-b0883cbf3f58",
            "87907500-4c9c-44d4-a90b-065bad016085",
            "04590899-4fd1-42b0-a6ba-0fa5188e56fc"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 727,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "fc25a91a-6321-41aa-a546-bfb2ec52509e",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 81,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "1e1ea711-107d-46c1-b2b1-9ee211e93614",
              "parentUUID": "fc25a91a-6321-41aa-a546-bfb2ec52509e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 143,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "396dbeb2-31bc-4ae1-aff3-da3e5cddc9bf",
              "parentUUID": "fc25a91a-6321-41aa-a546-bfb2ec52509e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1e1ea711-107d-46c1-b2b1-9ee211e93614",
            "396dbeb2-31bc-4ae1-aff3-da3e5cddc9bf"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 224,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "23750837-bb92-40de-8816-1879f1808ffe",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 80,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "6e9e0df9-b1ee-49a4-9f91-24b2e22dc7c6",
              "parentUUID": "23750837-bb92-40de-8816-1879f1808ffe",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 99,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "0667296d-07c2-4551-a9f2-d4f658eed1be",
              "parentUUID": "23750837-bb92-40de-8816-1879f1808ffe",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 147,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "6221434c-1f5a-4376-b98c-0ca59e5f06d0",
              "parentUUID": "23750837-bb92-40de-8816-1879f1808ffe",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 80,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "1534c615-337b-40e5-8214-6440061eed5d",
              "parentUUID": "23750837-bb92-40de-8816-1879f1808ffe",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6e9e0df9-b1ee-49a4-9f91-24b2e22dc7c6",
            "0667296d-07c2-4551-a9f2-d4f658eed1be",
            "6221434c-1f5a-4376-b98c-0ca59e5f06d0",
            "1534c615-337b-40e5-8214-6440061eed5d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 406,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "ac3d3265-a6b3-4930-8c4b-969b94d3cce7",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 241,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "2c893780-ed4c-4091-822a-5f6abf4a5c83",
              "parentUUID": "ac3d3265-a6b3-4930-8c4b-969b94d3cce7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 221,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "e845ddc5-c83c-42b3-8d0a-ecd87fc44274",
              "parentUUID": "ac3d3265-a6b3-4930-8c4b-969b94d3cce7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2c893780-ed4c-4091-822a-5f6abf4a5c83",
            "e845ddc5-c83c-42b3-8d0a-ecd87fc44274"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 462,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "753931cc-8af9-420c-8cd0-3b9f57a85e58",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 82,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "e1226fa9-a513-4f21-b1c0-628b86522402",
              "parentUUID": "753931cc-8af9-420c-8cd0-3b9f57a85e58",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 83,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "d34ba38f-1fa9-476a-bb9d-52398a68ffe5",
              "parentUUID": "753931cc-8af9-420c-8cd0-3b9f57a85e58",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e1226fa9-a513-4f21-b1c0-628b86522402",
            "d34ba38f-1fa9-476a-bb9d-52398a68ffe5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 165,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f412a98d-8888-42fe-9435-902efd41090c",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 446,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "7908ad00-bda8-4702-812a-cad1306ad8ce",
              "parentUUID": "f412a98d-8888-42fe-9435-902efd41090c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 8738,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "4e91c3d5-ddd1-4713-8134-10f6595a1421",
              "parentUUID": "f412a98d-8888-42fe-9435-902efd41090c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7908ad00-bda8-4702-812a-cad1306ad8ce",
            "4e91c3d5-ddd1-4713-8134-10f6595a1421"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9184,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f139cddf-db25-4a60-88ff-ab37450ebfc9",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2181,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "ad16c202-546f-487f-a811-02ba898efd39",
              "parentUUID": "f139cddf-db25-4a60-88ff-ab37450ebfc9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 8719,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "c216e74e-37ab-4aff-8f73-4462f31fbb18",
              "parentUUID": "f139cddf-db25-4a60-88ff-ab37450ebfc9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 1341,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "67db441c-613f-4a26-b0dc-4015369a52de",
              "parentUUID": "f139cddf-db25-4a60-88ff-ab37450ebfc9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ad16c202-546f-487f-a811-02ba898efd39",
            "c216e74e-37ab-4aff-8f73-4462f31fbb18",
            "67db441c-613f-4a26-b0dc-4015369a52de"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12241,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a6b4d8c9-4357-45b1-b209-01ce8126ad94",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 118,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "ea9c0071-f195-4222-b647-3846f85e99b5",
              "parentUUID": "a6b4d8c9-4357-45b1-b209-01ce8126ad94",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 84,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "a4adae46-1e9a-40fc-8194-ac7552471e9c",
              "parentUUID": "a6b4d8c9-4357-45b1-b209-01ce8126ad94",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 60,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "86870358-5e82-4fcd-9cd3-43510a39a5b8",
              "parentUUID": "a6b4d8c9-4357-45b1-b209-01ce8126ad94",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 2330,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "e1b36889-9a31-4203-a46c-d6398c12809f",
              "parentUUID": "a6b4d8c9-4357-45b1-b209-01ce8126ad94",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ea9c0071-f195-4222-b647-3846f85e99b5",
            "a4adae46-1e9a-40fc-8194-ac7552471e9c",
            "86870358-5e82-4fcd-9cd3-43510a39a5b8",
            "e1b36889-9a31-4203-a46c-d6398c12809f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2592,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b3974ea7-5c11-4387-9c3f-3618f4ce19c3",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 4274,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:36051/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:36051/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:36051/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:36051/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:36051/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:36051/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:36051/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:36051/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:36051/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:36051/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:36051/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:36051/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:36051/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "8e5c3a10-0c65-4d98-a358-1edfa2413c09",
              "parentUUID": "b3974ea7-5c11-4387-9c3f-3618f4ce19c3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 4306,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:36051/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:36051/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:36051/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:36051/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:36051/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:36051/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:36051/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:36051/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:36051/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:36051/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:36051/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:36051/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:36051/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "f88c4422-9519-485e-8fa8-a368706f6685",
              "parentUUID": "b3974ea7-5c11-4387-9c3f-3618f4ce19c3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4269,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:36051/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:36051/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:36051/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:36051/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:36051/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:36051/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:36051/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:36051/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:36051/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:36051/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:36051/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:36051/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:36051/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "ba6c05b9-28de-43a6-bc1f-b021fca008a2",
              "parentUUID": "b3974ea7-5c11-4387-9c3f-3618f4ce19c3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 4252,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:36051/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:36051/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:36051/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:36051/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:36051/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:36051/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:36051/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:36051/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:36051/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:36051/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:36051/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:36051/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:36051/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "ec4b634a-899b-4415-a9dd-229e312da5ba",
              "parentUUID": "b3974ea7-5c11-4387-9c3f-3618f4ce19c3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 4252,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:36051/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:36051/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:36051/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:36051/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:36051/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:36051/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:36051/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:36051/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:36051/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:36051/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:36051/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:36051/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:36051/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "d42ec5dc-d542-4c5b-8d0b-1b76a1867c16",
              "parentUUID": "b3974ea7-5c11-4387-9c3f-3618f4ce19c3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 4249,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:36051/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:36051/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:36051/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:36051/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:36051/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:36051/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:36051/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:36051/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:36051/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:36051/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:36051/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:36051/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:36051/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "d6a8ee58-9c9e-4338-a271-f3445582cc63",
              "parentUUID": "b3974ea7-5c11-4387-9c3f-3618f4ce19c3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 4236,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:36051/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:36051/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:36051/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:36051/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:36051/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:36051/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:36051/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:36051/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:36051/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:36051/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:36051/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:36051/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:36051/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "99981051-c0c7-4074-b425-f590e943df72",
              "parentUUID": "b3974ea7-5c11-4387-9c3f-3618f4ce19c3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4207,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:36051/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:36051/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:36051/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:36051/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:36051/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:36051/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:36051/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:36051/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:36051/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:36051/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:36051/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:36051/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:36051/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "99ece2b1-c46c-4ee1-b400-16d79954fe80",
              "parentUUID": "b3974ea7-5c11-4387-9c3f-3618f4ce19c3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4250,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:36051/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:36051/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:36051/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:36051/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:36051/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:36051/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:36051/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:36051/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:36051/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:36051/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:36051/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:36051/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:36051/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "68ef3cab-836c-4532-85e1-93d2674e279e",
              "parentUUID": "b3974ea7-5c11-4387-9c3f-3618f4ce19c3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "8e5c3a10-0c65-4d98-a358-1edfa2413c09",
            "f88c4422-9519-485e-8fa8-a368706f6685",
            "ba6c05b9-28de-43a6-bc1f-b021fca008a2",
            "ec4b634a-899b-4415-a9dd-229e312da5ba",
            "d42ec5dc-d542-4c5b-8d0b-1b76a1867c16",
            "d6a8ee58-9c9e-4338-a271-f3445582cc63",
            "99981051-c0c7-4074-b425-f590e943df72",
            "99ece2b1-c46c-4ee1-b400-16d79954fe80",
            "68ef3cab-836c-4532-85e1-93d2674e279e"
          ],
          "pending": [],
          "skipped": [],
          "duration": 38295,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "501cc08b-b32d-4462-9f61-59930081977e",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4248,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:36051/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:36051/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:36051/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:36051/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:36051/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:36051/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:36051/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:36051/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:36051/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:36051/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:36051/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:36051/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:36051/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "2d471721-23bf-43f3-93af-a48e59a97f8f",
              "parentUUID": "501cc08b-b32d-4462-9f61-59930081977e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 4268,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:36051/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:36051/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:36051/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:36051/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:36051/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:36051/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:36051/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:36051/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:36051/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:36051/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:36051/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:36051/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:36051/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "372c828a-d801-4fb9-b4d7-9f8a86aa8a02",
              "parentUUID": "501cc08b-b32d-4462-9f61-59930081977e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4241,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:36051/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:36051/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:36051/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:36051/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:36051/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:36051/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:36051/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:36051/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:36051/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:36051/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:36051/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:36051/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:36051/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "77b95968-97da-432c-8d01-fb8a017cc9dd",
              "parentUUID": "501cc08b-b32d-4462-9f61-59930081977e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "2d471721-23bf-43f3-93af-a48e59a97f8f",
            "372c828a-d801-4fb9-b4d7-9f8a86aa8a02",
            "77b95968-97da-432c-8d01-fb8a017cc9dd"
          ],
          "pending": [],
          "skipped": [],
          "duration": 12757,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "10d11b6b-3f7f-4b86-9659-917fc6d40962",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 362,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:36051/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:36051/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:36051/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:36051/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:36051/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:36051/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:36051/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:36051/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:36051/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:36051/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:36051/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:36051/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:36051/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:36051/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "214d18cd-75ff-4012-9166-60bf2861e069",
              "parentUUID": "10d11b6b-3f7f-4b86-9659-917fc6d40962",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 368,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:36051/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:36051/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:36051/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:36051/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:36051/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:36051/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:36051/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:36051/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:36051/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:36051/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:36051/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:36051/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:36051/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:36051/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "f8dab08f-8613-4147-944a-58d3ee16f88f",
              "parentUUID": "10d11b6b-3f7f-4b86-9659-917fc6d40962",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "214d18cd-75ff-4012-9166-60bf2861e069",
            "f8dab08f-8613-4147-944a-58d3ee16f88f"
          ],
          "pending": [],
          "skipped": [],
          "duration": 730,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}