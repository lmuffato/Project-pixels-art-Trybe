{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 29,
    "pending": 0,
    "failures": 12,
    "start": "2021-03-20T21:29:37.474Z",
    "end": "2021-03-20T21:31:09.880Z",
    "duration": 92406,
    "testsRegistered": 41,
    "passPercent": 70.73170731707317,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "d426b39b-bbd1-4eb6-92ed-f09e067884a0",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "25f83159-6616-4d8e-bdbb-98d13ffd7c6d",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 300,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "86cfbc6f-937d-4353-879e-4c9a6856b663",
              "parentUUID": "25f83159-6616-4d8e-bdbb-98d13ffd7c6d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "86cfbc6f-937d-4353-879e-4c9a6856b663"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 300,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f5b32107-483d-4f79-a2da-96abe6845730",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "timedOut": null,
              "duration": 217,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');",
              "err": {},
              "uuid": "b7022cd6-d511-4130-8a6c-d893f42367bb",
              "parentUUID": "f5b32107-483d-4f79-a2da-96abe6845730",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 457,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "9ad0889b-4ed1-4880-ac99-1bded03b4e4f",
              "parentUUID": "f5b32107-483d-4f79-a2da-96abe6845730",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 296,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "dbd001d2-944d-493f-aeee-57490d7c3199",
              "parentUUID": "f5b32107-483d-4f79-a2da-96abe6845730",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 207,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "7e974d9e-c31e-4dff-af35-d794dbac51de",
              "parentUUID": "f5b32107-483d-4f79-a2da-96abe6845730",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 139,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "4731aab7-b279-4d6f-b232-e674a03d0dd9",
              "parentUUID": "f5b32107-483d-4f79-a2da-96abe6845730",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 151,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "e3a46dc2-faf7-4ff0-9fcc-85ae6c01fb6e",
              "parentUUID": "f5b32107-483d-4f79-a2da-96abe6845730",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 136,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "2cb94154-a7eb-4ab7-9e11-b2215bddbd78",
              "parentUUID": "f5b32107-483d-4f79-a2da-96abe6845730",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b7022cd6-d511-4130-8a6c-d893f42367bb",
            "9ad0889b-4ed1-4880-ac99-1bded03b4e4f",
            "dbd001d2-944d-493f-aeee-57490d7c3199",
            "7e974d9e-c31e-4dff-af35-d794dbac51de",
            "4731aab7-b279-4d6f-b232-e674a03d0dd9",
            "e3a46dc2-faf7-4ff0-9fcc-85ae6c01fb6e",
            "2cb94154-a7eb-4ab7-9e11-b2215bddbd78"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1603,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c92e12ae-65ae-4ae2-893c-37038d03c05a",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 241,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "c783c036-2de6-4734-8ece-5a9701321bfa",
              "parentUUID": "c92e12ae-65ae-4ae2-893c-37038d03c05a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 513,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "bdcf5f99-9081-4f5e-bc76-4fe768f88cb7",
              "parentUUID": "c92e12ae-65ae-4ae2-893c-37038d03c05a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c783c036-2de6-4734-8ece-5a9701321bfa",
            "bdcf5f99-9081-4f5e-bc76-4fe768f88cb7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 754,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d775a67c-a3db-4558-8038-1ce7955de75f",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 198,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "9eb4f9f1-dfad-4eea-a466-9cf91e2f0cdd",
              "parentUUID": "d775a67c-a3db-4558-8038-1ce7955de75f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 565,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "37da6f12-73aa-4ed8-9081-3b3651b48bd5",
              "parentUUID": "d775a67c-a3db-4558-8038-1ce7955de75f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 402,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "864dd836-de32-4730-b19b-9a4ce14b6fcc",
              "parentUUID": "d775a67c-a3db-4558-8038-1ce7955de75f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 401,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "0dff0ae4-2b5b-4409-8491-1f7b330e3e92",
              "parentUUID": "d775a67c-a3db-4558-8038-1ce7955de75f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9eb4f9f1-dfad-4eea-a466-9cf91e2f0cdd",
            "37da6f12-73aa-4ed8-9081-3b3651b48bd5",
            "864dd836-de32-4730-b19b-9a4ce14b6fcc",
            "0dff0ae4-2b5b-4409-8491-1f7b330e3e92"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1566,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "de3ec64b-0fec-45d5-83b2-bc168d461adb",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 1135,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "b55ddd34-df8b-4829-9403-bfba7c298a0c",
              "parentUUID": "de3ec64b-0fec-45d5-83b2-bc168d461adb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 1000,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "6a4d037d-c87f-4bff-8554-f916ff0f71e1",
              "parentUUID": "de3ec64b-0fec-45d5-83b2-bc168d461adb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b55ddd34-df8b-4829-9403-bfba7c298a0c",
            "6a4d037d-c87f-4bff-8554-f916ff0f71e1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2135,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d9f0c01e-671f-4516-862b-b10ffa38bdca",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 237,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "f4e04132-3c47-4b6a-aab8-e34895aabdd0",
              "parentUUID": "d9f0c01e-671f-4516-862b-b10ffa38bdca",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 202,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "492661c8-905c-425c-9b34-adeb0d08b7d9",
              "parentUUID": "d9f0c01e-671f-4516-862b-b10ffa38bdca",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f4e04132-3c47-4b6a-aab8-e34895aabdd0",
            "492661c8-905c-425c-9b34-adeb0d08b7d9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 439,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "9a503f8d-50eb-4a52-8b69-ab624695c8fd",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 577,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "f465c56d-5c9e-40ee-a342-a547bf7ed995",
              "parentUUID": "9a503f8d-50eb-4a52-8b69-ab624695c8fd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 9166,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "0e9a5165-e3c2-4372-824c-b3e83ef9996a",
              "parentUUID": "9a503f8d-50eb-4a52-8b69-ab624695c8fd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f465c56d-5c9e-40ee-a342-a547bf7ed995",
            "0e9a5165-e3c2-4372-824c-b3e83ef9996a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9743,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "bd279ea6-0a35-4743-8b69-a660e82af806",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2487,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "d268f0bb-f7a4-4463-b680-5c2bfbd7d735",
              "parentUUID": "bd279ea6-0a35-4743-8b69-a660e82af806",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 9295,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "2b8ccdf1-0a05-47a4-bce4-2415ce7e2f15",
              "parentUUID": "bd279ea6-0a35-4743-8b69-a660e82af806",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 2398,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "b5e2d770-62a8-407a-b21b-9b2edff06466",
              "parentUUID": "bd279ea6-0a35-4743-8b69-a660e82af806",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d268f0bb-f7a4-4463-b680-5c2bfbd7d735",
            "2b8ccdf1-0a05-47a4-bce4-2415ce7e2f15",
            "b5e2d770-62a8-407a-b21b-9b2edff06466"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 14180,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5423b926-4245-4176-a129-14effe542c1a",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 254,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "9c1c7488-bef3-4e24-b2c4-91e6106c5e08",
              "parentUUID": "5423b926-4245-4176-a129-14effe542c1a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 262,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "1bfe0e91-717a-4367-a295-bb9861292e32",
              "parentUUID": "5423b926-4245-4176-a129-14effe542c1a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 154,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "688e49fc-8181-4acf-9997-8abb0f59f7ea",
              "parentUUID": "5423b926-4245-4176-a129-14effe542c1a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 2767,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "8709a090-15c2-40bb-a0cc-9a99014a2ddf",
              "parentUUID": "5423b926-4245-4176-a129-14effe542c1a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9c1c7488-bef3-4e24-b2c4-91e6106c5e08",
            "1bfe0e91-717a-4367-a295-bb9861292e32",
            "688e49fc-8181-4acf-9997-8abb0f59f7ea",
            "8709a090-15c2-40bb-a0cc-9a99014a2ddf"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3437,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "84973426-c9d8-42ab-bbff-860db5eb65d5",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 4663,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:37759/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:37759/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:37759/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:37759/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:37759/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:37759/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:37759/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:37759/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:37759/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:37759/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:37759/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:37759/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:37759/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "f2890fc1-df08-4cf1-a368-3ef588ee3edd",
              "parentUUID": "84973426-c9d8-42ab-bbff-860db5eb65d5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 5000,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:37759/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:37759/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:37759/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:37759/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:37759/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:37759/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:37759/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:37759/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:37759/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:37759/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:37759/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:37759/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:37759/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "909afdc3-d95b-4330-b585-05e011fabbca",
              "parentUUID": "84973426-c9d8-42ab-bbff-860db5eb65d5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4540,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:37759/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:37759/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:37759/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:37759/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:37759/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:37759/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:37759/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:37759/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:37759/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:37759/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:37759/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:37759/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:37759/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "5a63fd5b-c7c1-4bcb-a6f4-dc0e58bc1e9e",
              "parentUUID": "84973426-c9d8-42ab-bbff-860db5eb65d5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 4607,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:37759/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:37759/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:37759/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:37759/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:37759/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:37759/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:37759/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:37759/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:37759/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:37759/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:37759/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:37759/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:37759/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "6bdfdbeb-6508-44f2-b791-3a8c44ccca2e",
              "parentUUID": "84973426-c9d8-42ab-bbff-860db5eb65d5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 4468,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:37759/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:37759/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:37759/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:37759/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:37759/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:37759/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:37759/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:37759/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:37759/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:37759/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:37759/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:37759/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:37759/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "2e7b852b-d572-422c-b175-f25f81571932",
              "parentUUID": "84973426-c9d8-42ab-bbff-860db5eb65d5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 4597,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:37759/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:37759/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:37759/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:37759/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:37759/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:37759/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:37759/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:37759/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:37759/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:37759/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:37759/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:37759/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:37759/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "73726932-6e39-4ad9-867b-5db04f91f17e",
              "parentUUID": "84973426-c9d8-42ab-bbff-860db5eb65d5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 4643,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:37759/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:37759/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:37759/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:37759/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:37759/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:37759/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:37759/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:37759/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:37759/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:37759/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:37759/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:37759/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:37759/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "0473350c-1a46-4564-a0c3-0b82a4bc6237",
              "parentUUID": "84973426-c9d8-42ab-bbff-860db5eb65d5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4556,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:37759/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:37759/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:37759/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:37759/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:37759/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:37759/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:37759/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:37759/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:37759/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:37759/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:37759/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:37759/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:37759/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "c356165d-ed33-409d-b5fb-704de99d9ea1",
              "parentUUID": "84973426-c9d8-42ab-bbff-860db5eb65d5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4515,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:37759/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:37759/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:37759/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:37759/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:37759/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:37759/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:37759/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:37759/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:37759/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:37759/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:37759/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:37759/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:37759/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "11fab679-e02f-4e3d-a3c7-b6075505e8a0",
              "parentUUID": "84973426-c9d8-42ab-bbff-860db5eb65d5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "f2890fc1-df08-4cf1-a368-3ef588ee3edd",
            "909afdc3-d95b-4330-b585-05e011fabbca",
            "5a63fd5b-c7c1-4bcb-a6f4-dc0e58bc1e9e",
            "6bdfdbeb-6508-44f2-b791-3a8c44ccca2e",
            "2e7b852b-d572-422c-b175-f25f81571932",
            "73726932-6e39-4ad9-867b-5db04f91f17e",
            "0473350c-1a46-4564-a0c3-0b82a4bc6237",
            "c356165d-ed33-409d-b5fb-704de99d9ea1",
            "11fab679-e02f-4e3d-a3c7-b6075505e8a0"
          ],
          "pending": [],
          "skipped": [],
          "duration": 41589,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b65c591d-e2e8-4756-ba69-73bc332782f7",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4466,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:37759/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:37759/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:37759/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:37759/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:37759/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:37759/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:37759/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:37759/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:37759/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:37759/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:37759/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:37759/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:37759/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "ea8a205e-1d16-4557-8632-cf6a5ff01a5e",
              "parentUUID": "b65c591d-e2e8-4756-ba69-73bc332782f7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 4491,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:37759/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:37759/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:37759/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:37759/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:37759/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:37759/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:37759/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:37759/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:37759/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:37759/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:37759/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:37759/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:37759/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "dd7536f2-74a4-4e20-974a-2a701ad5dd9e",
              "parentUUID": "b65c591d-e2e8-4756-ba69-73bc332782f7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4536,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:37759/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:37759/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:37759/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:37759/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:37759/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:37759/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:37759/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:37759/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:37759/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:37759/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:37759/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:37759/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:37759/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "b9a6825e-ca70-4572-8638-a131d38d4740",
              "parentUUID": "b65c591d-e2e8-4756-ba69-73bc332782f7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "ea8a205e-1d16-4557-8632-cf6a5ff01a5e",
            "dd7536f2-74a4-4e20-974a-2a701ad5dd9e",
            "b9a6825e-ca70-4572-8638-a131d38d4740"
          ],
          "pending": [],
          "skipped": [],
          "duration": 13493,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c4f1ebd6-4120-4c5b-8ff9-1f2b4c095da2",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 696,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {},
              "uuid": "03424501-aeb2-42fa-872e-01deccac3925",
              "parentUUID": "c4f1ebd6-4120-4c5b-8ff9-1f2b4c095da2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 671,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {},
              "uuid": "d7c00ebf-a9dc-4418-aac9-9a709cfce751",
              "parentUUID": "c4f1ebd6-4120-4c5b-8ff9-1f2b4c095da2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "03424501-aeb2-42fa-872e-01deccac3925",
            "d7c00ebf-a9dc-4418-aac9-9a709cfce751"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1367,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}